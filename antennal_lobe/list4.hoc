{load_file ("nrngui.hoc")}
{load_file ("cellid.hoc")}
{load_file ("ranstream.hoc")}

NCELL = 20
C_E = 3
connect_random_low_start_ = 1

objref cells, nclist
objref ranlist
proc mknet(){
    mkcells($1)
    connectcells()
}

proc mkcells(){local i,j localobj cell
    cells = new List()
    ranlist = new List()
    for i = 0, $1-1{
	cell = new B_BallStick()
	for j = 0, cell.synlist.count-1{
	    cell.synlist.o (j).cid=i
	    cell.synlist.o (j).sid=j
	}
	cells.append(cell)
	ranlist.append(new RandomStream (i))
    }
}
proc connectcells() {local i, nsyn, r localobj src, syn, nc, rs, u
    mcell_ran4_init(connect_random_low_start_)
    u = new Vector(NCELL)
    nclist = new List()
    for i=0, cells.count-1{
	syn = cells.object(i).synlist.object(0)
	rs = ranlist.object(i)
	rs.start()
	rs.r.discunif(0,NCELL-1)
	u.fill(0)
	nsyn=0
	while(nsyn<C_E){
	    r=rs.repick()
	    if(r!=i) if(u.x[r]==0){
		src = cells.object(r)
		nc = src.connect2target(syn)
		nclist.append(nc)
		nc.delay=1
		nc.weight=0.01
		u.x[r] = 1
		nsyn +=1
	    }
	}
    }
}

mknet(NCELL)

proc tracenet(){local i localobj src,tgt
    printf("source\ttarget\tsynapse\n")
    for i = 0, nclist.count-1{
	src = nclist.o(i).precell
	tgt = nclist.o(i).syn
	printf("%d\t%d\t%d\n", src.synlist.o(0).cid, tgt.cid, tgt.sid)
    }
}
tracenet()

objref stim, ncstim
proc mkstim(){
    stim = new NetStim()
    stim.number = 1
    stim.start = 0
    ncstim = new NetCon(stim, cells.object(0).synlist.object(0))
    ncstim.delay = 0 ncstim.weight=0.01
}
mkstim()

objref tvec, idvec
proc spikerecord(){local i localobj nc, nil
    tvec = new Vector()
    idvec = new Vector()
    for i = 0, cells.count-1{
	nc = cells.object(i).connect2target(nil)
	nc.record(tvec,idvec,i)
    }
}
spikerecord()

tstop = 100
run()

proc spikeout(){local i
    printf("\ntime\t cell\n")
    for i=0, tvec.size-1{
	printf("%g\t %d\n",tvec.x[i],idvec.x[i])
    }
}
spikeout()
quit()


